/*
 * This is a textual representation a model expressed using the Qak language (metamodel)
 * that describes the structure, interaction, behaviour of the software system
 * according to the requirements
 */
 
System basicrobot  

Dispatch cmd      : cmd(X)					//sent by external interface
Event  userCmd    : userCmd(X)				//generated by (web) user interface
Event  obstacle   : obstacle( DISTANCE )	//generated by sonaractorfilter.kt
Event  alarm      : alarm( V )   			//generated by the external world
Event  sonarRobot : sonar( D )				//NOT generated (at the moment) since sonaractorfilter
Event  polar      : polar( D,Angle)			//generated by sonarforradar

Context ctxBasicRobot   ip [ host= "10.201.116.57"   port= 8018 ]

CodedQActor robotadapter context ctxBasicRobot className "itunibo.robot.robotAdapterQaStream"

QActor basicrobot context ctxBasicRobot { 
	State s0 initial {
		["
		//The PIPE could be completetly created by the robotAdapterQaStream
		//WARNING: use myself to denote the basicrobot actor, since this refers to the state
		 
		//val filter   = itunibo.robot.rx.sonaractorfilter(\"filter\", myself)  //generates obstacle
		//val logger   = itunibo.robot.rx.Logger(\"logger\")
		val forradar = itunibo.robot.rx.sonarforradar(\"forradar\", myself)  //generates polar
		itunibo.robot.robotSupport.subscribe( forradar ) 
		"]
		println("init")
	}
	Goto idle

	State idle{	println ( "robot waiting" ) 		
	}	
	Transition t0
		whenMsg   cmd        -> handleCmd
		whenEvent obstacle -> handleObstacle 
 	 
	State handleCmd{ 
 		printCurrentMessage
		onMsg ( cmd : cmd(X) ) { 
			forward robotadapter -m cmd : cmd($payloadArg(0))
		}
 	}
 	Goto idle
 	
	State handleObstacle{
		printCurrentMessage
		forward robotadapter -m cmd : cmd(h)
	}
	Goto idle
}

/*
 * The actor sentinel is sensible to alarm events emitted by the external world
 */
 QActor sentinel context ctxBasicRobot{
	State s0 initial{ 
		println("sentinel start")
	}
	Transition t0 
		whenEvent alarm -> handleAlarm
 	
	State handleAlarm{
		printCurrentMessage
		println("sentinel handleAlarm ")
	}
 	Transition t0 
		whenEvent alarm -> handleAlarm
 }

