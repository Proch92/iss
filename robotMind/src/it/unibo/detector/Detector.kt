/* Generated by AN DISI Unibo */ 
package it.unibo.detector

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Detector ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "idle"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("idle") { //this:State
					action { //it:State
					}
					 transition(edgeName="t02",targetState="sExplore",cond=whenDispatch("explore"))
				}	 
				state("sExplore") { //this:State
					action { //it:State
					}
					 transition(edgeName="t13",targetState="checkObstacle",cond=whenEvent("obstacle"))
					transition(edgeName="t14",targetState="goEmpty",cond=whenDispatch("terminate"))
					transition(edgeName="t15",targetState="goHome",cond=whenDispatch("suspend"))
				}	 
				state("checkObstacle") { //this:State
					action { //it:State
					}
					 transition( edgeName="goto",targetState="sExplore", cond=doswitch() )
				}	 
				state("goEmpty") { //this:State
					action { //it:State
					}
					 transition( edgeName="goto",targetState="goHome", cond=doswitch() )
				}	 
				state("goHome") { //this:State
					action { //it:State
					}
					 transition( edgeName="goto",targetState="idle", cond=doswitch() )
				}	 
			}
		}
}
