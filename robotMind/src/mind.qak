/*
 * This is a textual representation a model expressed using the Qak language (metamodel)
 * that describes the structure, interaction, behaviour of the software system
 * according to the requirements
 */

System robotmind

Dispatch step	: step(X)  // step
Dispatch stop	: stop(X)  // stop
Dispatch cmd 	: cmd(X)   // aswdh

Context ctxMind	ip [ host= "localhost"   port= 8023 ]
ExternalContext ctxBasicRobot  ip [ host= "localhost"   port= 8020 ]

ExternalQActor basicrobot context ctxBasicRobot 

QActor basicrobot context ctxMind {
	State s0 initial {
		println("init")
	}
	Goto idle
	
	State idle {
		println("idle")
	}
	Transition tstep whenMsg step -> sStep
	Transition tstep whenMsg stop -> sStop
	Transition tstep whenMsg cmd -> sHandleCmd
	
	State sStep {
		println("sStep")
		forward basicrobot -m cmd : cmd(w)
		delay 1000
		forward basicrobot -m cmd : cmd(h)
	}
	Goto idle

	State sStop {
		println("sStop")
		forward basicrobot -m cmd : cmd(h)
	}
	Goto idle

	State sHandleCmd {
		println("sHandleCmd")
		onMsg (cmd : cmd(X)) {
			forward basicrobot -m cmd : cmd(X)
		}
	}
	Goto idle
	
}
