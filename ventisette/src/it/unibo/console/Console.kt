/* Generated by AN DISI Unibo */ 
package it.unibo.console

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Console ( name: String, scope: CoroutineScope ) : ActorBasicFsm( name, scope){
 	
	override fun getInitialState() : String{
		return "init"
	}
		
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("init") { //this:State
					action { //it:State
						println("init")
					}
					 transition( edgeName="goto",targetState="idle", cond=doswitch() )
				}	 
				state("idle") { //this:State
					action { //it:State
						println("idle")
					}
					 transition(edgeName="tcmd2",targetState="handleCmd",cond=whenDispatch("cmd"))
					transition(edgeName="tcmd3",targetState="handleSonar",cond=whenEvent("sonar"))
				}	 
				state("handleCmd") { //this:State
					action { //it:State
						println("handleCmd")
						if( checkMsgContent( Term.createTerm("cmd(X)"), Term.createTerm("cmd(X)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								forward("cmd", "cmd(${payloadArg(0)})" ,"robot" ) 
						}
					}
					 transition( edgeName="goto",targetState="idle", cond=doswitch() )
				}	 
				state("handleSonar") { //this:State
					action { //it:State
						println("handleSonar")
						if( checkMsgContent( Term.createTerm("sonar(D)"), Term.createTerm("sonar(D)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								println("${payloadArg(0)}")
						}
					}
					 transition( edgeName="goto",targetState="idle", cond=doswitch() )
				}	 
			}
		}
}
